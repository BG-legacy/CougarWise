apiVersion: v1  # Kubernetes API version for basic resources
kind: ServiceAccount  # Resource type - a ServiceAccount provides an identity for pods
metadata:  # Metadata about this ServiceAccount
  name: admin-user  # Name of the ServiceAccount
  namespace: kubernetes-dashboard  # Namespace where this ServiceAccount will exist
---  # Document separator - multiple resources in one YAML file
apiVersion: rbac.authorization.k8s.io/v1  # Kubernetes API version for RBAC resources
kind: ClusterRoleBinding  # Resource type - binds a role to subjects
metadata:  # Metadata about this ClusterRoleBinding
  name: admin-user  # Name of the ClusterRoleBinding
roleRef:  # Reference to the role being bound
  apiGroup: rbac.authorization.k8s.io  # API group of the role
  kind: ClusterRole  # Type of role - ClusterRole is cluster-wide
  name: cluster-admin  # Name of the role - cluster-admin has full access
subjects:  # List of subjects (users, groups, or service accounts)
- kind: ServiceAccount  # Type of subject - ServiceAccount
  name: admin-user  # Name of the subject
  namespace: kubernetes-dashboard  # Namespace of the subject
---  # Document separator - another resource
apiVersion: v1  # Kubernetes API version for basic resources
kind: Namespace  # Resource type - a Namespace provides isolation
metadata:  # Metadata about this Namespace
  name: kubernetes-dashboard  # Name of the Namespace 